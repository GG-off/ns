#!/bin/bash
# NewScript.sh
# créé un nouveau script
## usage :
# ns no_space_new_script_name
# ./SCRIPTS/NewScript.sh
#
# MÉMO PERSOS
# if [ $n = "chaîne" ]; then
# 	# commandes
# elif; then
#	# commandes
# else
#	# default commandes
# fi
#
# ${i%.*}
# ${i##*.}
# input "$@"
# mkdir -p
# ls -l
# run "$@"
# run() {
# 
# }
# # # # #
# j'ai vu qulque part la gestion de dépendences !! gestion flag, help, etc.
# sudo apt-get install $dependencies01 $dependencies02 $dependenciesnn

if [[ $1 = "" ]] ; then
	echo "Nom du script à créer, sans extension :" && read NomNewScript
	else
	NomNewScript="$1"
fi

NewScript="$NomNewScript.sh"
# s'il existe déjà on arrête là hein mais on prévient
touch "$NewScript"
chmod +x $NewScript

echo "# !/bin/bash" >> $NewScript
echo "# $NewScript a été créé avec la commande ns" >> $NewScript
echo "# Setup :" >> $NewScript
echo "#" >> $NewScript
echo "# Usage de $NewScript :" >> $NewScript
echo "# $NewScript -flag -option " >> $NewScript
echo ""
echo "" # lol ou préparer un template et le cp :p
echo ""
echo "exit 0" >> $NewScript

xed $NewScript && echo "Executer $NewScript ? y/N" && read Answer
if [[ $Answer = "y" ]] ; then
	./$NewScript
	else
	exit 0
fi

exit 0
# possibilité d'ajout d'un alias ou de mettre le nouveau script dans usr/local/bin/
# éventuellement start.sh ou mh.sh
# ajout dans Collection de script (obsidian)
# format :
# dans le somaire : [[#ScriptName]]
# dans le corps :
# ## ScriptName
# ```
# script
# ```


